

process.on('unhandledRejection', (reason, p) => {
    console.log('Unhandled Rejection at: Promise', p, 'reason:', reason);
    // application specific logging, throwing an error, or other logic here
  });



var Flexio = require('./src/main.js')

//Flexio.setup('xtdkxpcjwzkpgkhkcmhx', { baseUrl: 'https://www.flex.io/api/v1' })
Flexio.setup('xtdkxpcjwzkpgkhkcmhx', {debug: true})
//Flexio.setup('xtdkxpcjwzkpgkhkcmhx', { baseUrl: 'https://localhost/api/v1', debug: true, insecure: true });
Flexio.setup('xtdkxpcjwzkpgkhkcmhx', { host: 'localhost', debug: true, insecure: true });

/*
var pipe = Flexio.pipe()
.javascript(function(context) {
   context.output.write('Hello ' + context.query.name + '!')
})

pipe.run({ query: { name: 'World' } })
.then(response => console.log(response.text))
*/

/*
Flexio.pipe()
.echo("Hello ${form.name}")
.run({form: { name: 'Ben' }})
.then(response => console.log(response.text))
*/


/*
Flexio.pipe()
//.echo("Hello ${input}")
.email({ to: "ben@flex.io", subject: "Hello!", body_text: "Body Text", attachments: [{ name: "abc.txt", file: "context://input" }] })
.run({data: 'Test123', content_type: 'text/plain'})
.then(response => console.log(response.text))
*/

Flexio.pipes.remove('hwf7c7gk34rc')
.then(response => console.log(response.text))



/*

Flexio.pipe()
  .python(`
import json
def flexio_handler(context):
    for row in context.input:
        context.output.write(row)
`)
  .run({data: '{"a":123}', headers: {'content-type': 'application/json' }})
  .then(response => console.log(response.text))
*/

/*
var querystring = require('querystring')
var formdata = querystring.stringify({ "myparam1": "myvalue1", "myparam2": "myvalue2" })

Flexio.pipe()
    .javascript(function(context) {
        var output = ''
        for (key in context.form) {
            output += key+":"+context.form[key]+" "
        }
        context.pipe.echo(output)
    })
.run({data: formdata, headers: {'content-type': 'application/x-www-form-urlencoded' } })
.then(response => console.log(response.text))
*/


/*
Flexio.pipe()
    .javascript(function(context) {
        var json = context.input.read()
        var obj = JSON.parse(json)

        var output = ''
        for (key in obj) {
            output += key+":"+obj[key]+" "
        }
        context.pipe.echo(output)
    })
.run({data: { "myparam1": "myvalue1", "myparam2": "myvalue2" }})
.then(response => console.log(response.text))
*/



/*
Flexio.pipe()
    .javascript(function(context) {
        var output = ''
        for (key in context.query) {
            output += key+":"+context.query[key]+" "
        }
        context.pipe.echo(output)
    })
.run({query: { "myparam1": "myvalue1", "myparam2": "myvalue2" }})
.then(response => console.log(response.text))
*/



/*
Flexio.pipe()
  .request({
  "method": "GET",
  "url": "https://raw.githubusercontent.com/flexiodata/examples/master/demo-contact-refinement/source-data/contacts-ltd1.csv"
})
  .convert({"format":"delimited","delimiter":"{comma}","header":true,"qualifier":"{double-quote}"}, {"format":"table"})
  .select("givenname","surname","streetaddress","city","state","zipcode")
  .transform({"columns":["givenname","surname","streetaddress","city"],"operations":[{"operation":"case","case":"upper"}]})
  .convert({"format":"table"}, {"format":"json"})
*/

/*
var pipe = Flexio.pipe()
.foreach(Flexio.pipe().set('result', '${result}${input.name}'))
.echo("${result}")

pipe.run({data:[{"name":"111"},{"name":"222"},{"name":"333"}]}).then(response => console.log(response.text))

*/


/*
console.log("Flex.io SDK version is " + Flexio.version)

Flexio.pipe()
  .echo("Hello")
  .run()
  .then(response => {
    console.log(response.text)
  })
*/


/*
Flexio.pipe()
    .set('my_multidimensional_array', [
        { data: [ 'aaa', 'bbb', 'ccc' ] },
        { data: [ 'ddd', 'eee', 'fff' ] },
        { data: [ 'ggg', 'hhh', 'iii' ] }
    ])
    .for('row : my_multidimensional_array',
        Flexio.pipe().for('value : row.data',
            Flexio.pipe().dump('${value}')))
.run().then(response => console.log(response.text))
.catch(msg => {
    console.log(Flexio.util.arrayBufferToString(msg.response.data))
})
*/

/*
var pipe = Flexio.pipe()
.set('my_multidimensional_array', [
    { data: [ 'aaa', 'bbb', 'ccc' ] },
    { data: [ 'ddd', 'eee', 'fff' ] },
    { data: [ 'ggg', 'hhh', 'iii' ] }
])
.foreach('row : my_multidimensional_array',
    Flexio.pipe().foreach('value : row.data',
        Flexio.pipe().dump('${value}')))
*/



/*
var pipe = Flexio.pipe()
console.log(JSON.stringify(

    pipe.getJSON().task

))
*/



/*
Flexio.pipe()
.echo([1,2,3])
.run()
.then(response => console.log(response.text))
.catch(msg => {
    console.log(Flexio.util.arrayBufferToString(msg.response.data))
})
*/

/*
Flexio.pipe()
.copy('/ben-dropbox/bwilliams/copytest1/*', '/testsuite-amazons3')
.run()
.then(response => console.log(response.text))
.catch(msg => {
    //console.log(Flexio.util.arrayBufferToString(msg.response.data)
})
*/


/*
Flexio.pipe()
.mkdir('/ben-dropbox2/newfolderAAA')
//.copy('/testsuite-googledrive/tests20180210000747/*', '
.run(function(err, response) {
    console.log(response.text);
})

*/





/*
Flexio.pipe()
.list('/flexio-public-s3')
.foreach(Flexio.pipe()
    .set('myvar', '${myvar}${input.name}'))
.echo('${myvar}')
.run(function(err, response) {
    console.log(response.text);
})
*/

/*
Flexio.pipe()
.list('/flexio-public-s3')
.filter('size >= 50000')
.foreach(Flexio.pipe()
    .read('/flexio-public-s3/${item.name}')
    .write('/home/files-from-bucket/${item.name}'))
.save()
*/

/*
Flexio.pipe()
 .request('https://raw.githubusercontent.com/d13125583/FYP_Dataset/master/VehicleI2.csv')
 .convert('delimited', 'json')
        .run(function(err, response) {
            console.log(response.text);
        });
*/

/*
Flexio.pipe()
    .echo("Hello")
    .run(function(err,response) {
        console.log(response.text)
    })
*/


/*
(async _ => {
var pipes = await Flexio.pipes.list()
console.log(pipes)
})()
*/

/*
async function main() {
    var code = Flexio.pipe().echo("Hello");
    var result = await code.run()
    console.log(result.text)
   // var pipes = await Flexio.pipes.list()
   // console.log(pipes)
}

main()
*/

/*
process.on('unhandledRejection', (reason, p) => {
    console.log('Unhandled Rejection at: Promise', p, 'reason:', reason);
    // application specific logging, throwing an error, or other logic here
  });
Flexio.pipe()
    .echo("Hello")
    .run().then(response => {
        console.log(response.text)
    })
*/

/*
var links = `
path
https://logo.clearbit.com/google.com?size=80
https://logo.clearbit.com/microsoft.com?size=80
`

Flexio.pipe()
   .echo(links)
   .convert('csv', 'json')
   .foreach(
       Flexio.pipe()
          .request({url:'${input.path}'})
          .write('/home/${uniqid}'))

.run(function(err, response) {
   console.log(response.text)
})
*/



/*

Flexio.pipe()
.request('https://dog.ceo/api/breeds/list/all')
.convert('json','delimited')
.run(function(err, response) {
    console.log(response.text)
    })
*/
    
/*
var links = `
path
https://api.iextrading.com/1.0/stock/AAPL/chart/1y
https://api.iextrading.com/1.0/stock/GOOG/chart/1y
`

Flexio.pipe()
   .echo(links)
   .convert('csv', 'json')
   .foreach(
      // Flexio.pipe().set('result', Flexio.pipe().request('${input.path}')))
      Flexio.pipe().set('result', 
   .echo("${result}")
   .run(function(err, response) {
    console.log(response.text)
    })
   */

/*
var pipe = Flexio.pipe()
            .foreach(Flexio.pipe().set('result', '${result}${input.name}'))
            .echo("Result: ${result}")
.run({data:[{"name":"111"},{"name":"222"},{"name":"333"}]}, function(err, response) {
    console.log(response.text)
    })
*/


/*
var pipe = Flexio.pipe()
            .list('context://var')
            .foreach(Flexio.pipe().set('battery', '${battery}${input.name} '))
            .echo("Your files are: ${battery}")

pipe.run(function(err, response) {
    console.log(response.text)
  })
*/


/*
Flexio.pipe()
  .request("https://raw.githubusercontent.com/flexiodata/data/master/pandas-pivot-sample/sales-funnel-sample.csv")
  .python(`

import pandas
import numpy as np

def flexio_handler(context):
     data_frame = pandas.read_csv(context.input)
     pivoted = pandas.pivot_table(data_frame, index=['Manager','Rep','Product'],values=['Price','Quantity'],aggfunc=[np.sum,np.mean],fill_value=0,margins=True)
     context.output.write(pivoted.to_string() + "\\n")

`)
.run(function(err, response) {
    console.log(response.text)
  })
*/


/*
Flexio.pipe()
  .request('https://git.io/vFBSw') // short url for names-and-ip-addresses.csv
  .convert('csv', 'table')         // convert to a table to apply a filter
  .filter('id = "1"')              // filter for a particular row
  .run(function(err, response) {
    console.log(response.text)
  })
*/


/*
Flexio.pipe()
  .request("https://raw.githubusercontent.com/flexiodata/data/master/pandas-pivot-sample/sales-funnel-sample.csv")
  .convert('csv', 'table')
  .python(`
def flexio_handler(context):
    context.output.create(structure=context.input.structure)
    for row in context.input:
        context.output.write(row)
`)
  .run(function(err, response) {
      //console.log(Flexio.util.arrayBufferToString(err.response))
       console.log(response.text)
  })

*/


/*
Flexio.pipe()
  .set('feed1', Flexio.pipe().request('https://api.iextrading.com/1.0/stock/GOOG/chart/1y'))
  .set('feed2', Flexio.pipe().request('https://api.iextrading.com/1.0/stock/AAPL/chart/1y'))
  .merge('context://var/feed1', 'context://var/feed2')
  .run(function(err, response) {
      //console.log(Flexio.util.arrayBufferToString(err.response))
       console.log(response.text)
  })
*/
  
/*
Flexio.pipe()
  .read('https://raw.githubusercontent.com/flexiodata/data/master/pandas-pivot-sample/sales-funnel-sample.csv')
  .python(
`
import pandas

def flexio_handler(context):
    data_frame = pandas.read_csv(context.input)
    pivoted = pandas.pivot_table(data_frame, index=['Name'])
    context.output.write(pivoted.to_string())
`)
  .save({ ename: 'pandas-pivot' })
*/

/*
  Flexio.pipe('pandas-pivot')
  .run(function(err, response) {
      //console.log(Flexio.util.arrayBufferToString(err.response))
       console.log(response.text)
  })
  */
/*
Flexio.pipe()
  .set('files1', Flexio.pipe().list("/ben-dropbox2"))
  .set('files2', Flexio.pipe().list("/ben-dropbox2"))
  .merge('context://var/files1', 'context://var/files2')
  .save({ ename: 'list-files1' })
*/



  /*
  Flexio.pipe('list-files1')
  .run(function(err, response) {
      //console.log(Flexio.util.arrayBufferToString(err.response))
       console.log(response.text)
  })*/

/*
Flexio.pipe()
  .set('ben', Flexio.pipe().echo("Ben"))
  .echo('Survey says: "${ben}"')
  .run(function(err, response) {
       console.log(response.text)
  })
  */

/*
Flexio.pipe()
  .read('/msq8162lp5rw/mulch123.csv')
  .write('/msq8162lp5rw/bwilliams/mulch124.csv')
  .run(function(err, response) {
         console.log(response.text)
  })
*/


/*
Flexio.pipe()
  .task({"type": "flexio.echo",
         "params": { "msg": "Hello, World"}})
  .run(function(err, response) {
         console.log(response.text)
  })
*/

/*
var pipe = new Flexio.pipe()
pipe.echo("Hello1")
pipe.echo("Hello2")
pipe.echo("Hello3")

var pipe = {
    "name": "Flexio Website",
    "ename": "my-custom-pipe-alias",
    "description": "Flex.io Website",
    "task": [
        {
            "type": "flexio.request",
            "params": {
                "url": "https://www.flex.io"
            }
        }
    ]
}

Flexio.pipes.create(pipe, function (err, response) {
    console.log(err)
    console.log(response)
})*/



/*
var conn = {
    "name": "HTTP Connection",
    "description": "HTTP Connection to API",
    "connection_type": "http",
    "connection_info": {
        "url": "https://api.service.com/endpoint",
        "headers": {
            "Authorization": "Bearer :token",
            "Content-Type": "application/json"
        }
    }
}
*/

/*
var conn = Flexio.connection()
conn.name("Hello")
    .description("This is a test description")

Flexio.connections.create(conn, function (err, response) {
    console.log(err)
    console.log(response)
})
*/


/*
var pipe = Flexio.pipe()
    .javascript(function(context) {
        context.output.write('Hello World! ' + context.query.name)
      })
.run({ query: { name:"Ben"} }, function(err, response) {
    console.log(response.text)
})

Flexio.pipes.run(pipe, { query: { name:"Ben"} }, function(err, response) {
    console.log(response.text)
})

*/

/*
var pipe = Flexio.pipe('hello-world').run(function(err, response) {
    console.log(response.text)
})

var pipe = Flexio.pipes.run('hello-world', function(err, response) {
    console.log(response.text)
})
*/
